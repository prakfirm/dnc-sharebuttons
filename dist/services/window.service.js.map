{"version":3,"sources":["../inlined/services/window.service.ts"],"names":[],"mappings":";;AAAA,sCAA2C;AAG3C;IAAA;IAYA,CAAC;IAVC,sBAAI,uCAAY;aAAhB;YACE,MAAM,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAEI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,oBAAC;CAZD,AAYC,IAAA;AAZY,sCAAa;AAc1B;IACE,iDAAiD;IACjD,MAAM,CANC,OAAO,MAAA,KAAW,WAAA,CAAY,CAAA,CAAE,MAAA,CAAO,CAAA,CAAE,SAAA,CAAU;AAO5D,CAAC","file":"window.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\n\nexport class WindowService {\n\n  get nativeWindow(): any {\n    return _window();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction _window(): any {\n  // return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}